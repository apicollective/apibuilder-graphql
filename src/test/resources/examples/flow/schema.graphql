type Query {
  # Resource io.flow.consumer.invoice.v0.models.b2b_credit_memo
  # Operation 'GET /:organization/b2b/credit/memos' response '200'
  # Response 200 [b2b_credit_memo]
  b2bCreditMemos(organization: String!, id: [String!], key: String, orderNumber: String, limit: Long! = 25, offset: Long! = 0, sort: String! = "-created_at"): [B2bCreditMemo!]

  # Resource io.flow.consumer.invoice.v0.models.b2b_invoice
  # Operation 'GET /:organization/b2b/invoices' response '200'
  # Response 200 [b2b_invoice]
  b2bInvoices(organization: String!, id: [String!], key: String, orderNumber: String, limit: Long! = 25, offset: Long! = 0, sort: String! = "-created_at"): [B2bInvoice!]

  # Resource io.flow.experience.v0.models.order_summary_line_item
  # Operation 'GET /lines/:id' response '200'
  # Response 200 io.flow.experience.v0.models.order_summary_line_item
  line(id: String!): OrderSummaryLineItem

  # Resource io.flow.payment.v0.models.public_key
  # Operation 'GET /:organization/encryption/keys/latest' response '200'
  # Response 200 public_key
  publicKey(organization: String!): PublicKey

  # Resource io.flow.consumer.invoice.v0.models.consumer_invoice
  # Operation 'GET /:organization/consumer/invoices' response '200'
  # Response 200 [consumer_invoice]
  consumerInvoices(organization: String!, id: [String!], key: String, orderNumber: String, limit: Long! = 25, offset: Long! = 0, sort: String! = "-created_at"): [ConsumerInvoice!]

  # Resource io.flow.common.v0.models.organization
  # Operation 'GET /organizations' response '200'
  # Response 200 [io.flow.common.v0.models.organization]
  organizations(id: [String!], name: String, environment: Environment, parent: String, limit: Long! = 25, offset: Long! = 0, sort: String! = "name"): [Organization!]

  # Resource io.flow.common.v0.models.organization
  # Operation 'GET /organizations/:organization_id' response '200'
  # Response 200 io.flow.common.v0.models.organization
  organization(organizationId: String!): Organization

  # Resource io.flow.consumer.invoice.v0.models.credit_memo
  # Operation 'GET /:organization/credit/memos' response '200'
  # Response 200 [credit_memo]
  creditMemos(organization: String!, id: [String!], key: String, orderNumber: String, limit: Long! = 25, offset: Long! = 0, sort: String! = "-created_at"): [CreditMemo!]

  # Resource io.flow.checkout.backend.v0.models.checkout
  # Operation 'GET /v2/checkouts/:id' response '200'
  # Response 200 checkout
  checkout(id: String!): Checkout
}

type Mutation {
  orderSummaryLineItem: OrderSummaryLineItemMutations

  checkout: CheckoutMutations

  organization: OrganizationMutations
}

type OrderSummaryLineItemMutations {
  # Resource io.flow.experience.v0.models.order_summary_line_item_input
  # Operation 'POST /lines/:id' response '200'
  # Response 200 io.flow.experience.v0.models.order_summary_line_item_input
  createLine(id: String!, body: CheckoutLineFormInput!): OrderSummaryLineItem

  # Resource io.flow.experience.v0.models.order_summary_line_item_input
  # Operation 'PUT /lines/:id' response '200'
  # Response 200 io.flow.experience.v0.models.order_summary_line_item_input
  updateLine(id: String!, body: CheckoutLineFormInput!): OrderSummaryLineItem

  # Resource io.flow.experience.v0.models.order_summary_line_item_input
  # Operation 'DELETE /lines/:id' response '204'
  # Response 204 unit
  deleteLine(id: String!): Unit
}

type CheckoutMutations {
  # Resource io.flow.checkout.backend.v0.models.checkout_input
  # Operation 'POST /v2/checkouts/session/:session_id' response '200'
  # Response 200 checkout_input
  createCheckoutBySessionId(sessionId: String!): Checkout
}

type OrganizationMutations {
  # Resource io.flow.common.v0.models.organization_input
  # Operation 'POST /organizations' response '201'
  # Response 201 io.flow.common.v0.models.organization_input
  createOrganization(body: OrganizationFormInput!): Organization

  # Resource io.flow.common.v0.models.organization_input
  # Operation 'PUT /organizations/:organization_id' response '200'
  # Response 200 io.flow.common.v0.models.organization_input
  updateOrganization(organizationId: String!, body: OrganizationPutFormInput!): Organization

  # Resource io.flow.common.v0.models.organization_input
  # Operation 'DELETE /organizations/:organization_id' response '204'
  # Response 204 unit
  deleteOrganization(organizationId: String!): Unit
}

scalar DateIso8601

scalar DateTimeIso8601

scalar Decimal

scalar Float

scalar Json

scalar Long

scalar Object

scalar Unit

# io.flow.common.v0.enums.environment
enum Environment {
  SANDBOX
  PRODUCTION
}

# io.flow.consumer.invoice.v0.enums.consumer_invoice_customer_type
enum ConsumerInvoiceCustomerType {
  BUSINESS_EU_VERIFIED
  BUSINESS_NON_VERIFIED
  INDIVIDUAL
}

# io.flow.consumer.invoice.v0.enums.consumer_invoice_document_type
enum ConsumerInvoiceDocumentType {
  PDF
}

# io.flow.consumer.invoice.v0.enums.consumer_invoice_status
enum ConsumerInvoiceStatus {
  PENDING
  AVAILABLE
  INVALID
}

# io.flow.harmonization.v0.enums.tax_verification_result
enum TaxVerificationResult {
  VALID
  INVALID
  UNABLE_TO_VALIDATE
}

# io.flow.merchant.of.record.v0.enums.economic_title_location
enum EconomicTitleLocation {
  HIGH_SEAS
  ORIGINATION
  DESTINATION
}

# io.flow.checkout.backend.v0.enums.checkout_error_code
enum CheckoutErrorCode {
  GENERIC_ERROR
}

# io.flow.checkout.common.v0.enums.checkout_redirect_method
enum CheckoutRedirectMethod {
  GET
  POST
}

# io.flow.common.v0.models.organization_defaults
type OrganizationDefaults {
  country: String!
  baseCurrency: String!
  language: String!
  locale: String!
  timezone: String!
}

# io.flow.common.v0.models.merchant_of_record_entity
type MerchantOfRecordEntity {
  organization: OrganizationReference!
  name: String!
  vat: MerchantOfRecordEntityRegistration!
  streets: [String!]!
  city: String!
  province: String
  postal: String
  country: String!
  phone: String
  email: String
}

# io.flow.common.v0.models.item_reference
type ItemReference {
  number: String!
}

# io.flow.common.v0.models.money
type Money {
  amount: Float!
  currency: String!
}

# io.flow.common.v0.models.billing_address
type BillingAddress {
  name: Name
  streets: [String!]
  city: String
  province: String
  postal: String
  country: String
  company: String
}

# io.flow.common.v0.models.address
type Address {
  text: String
  streets: [String!]
  streetNumber: String
  city: String
  province: String
  postal: String
  country: String
  latitude: String
  longitude: String
}

# io.flow.common.v0.models.organization
type Organization {
  id: ID!
  name: String!
  environment: Environment!
  parent: OrganizationReference
  defaults: OrganizationDefaults
  createdAt: DateTimeIso8601
}

# io.flow.common.v0.models.organization_summary
type OrganizationSummary {
  id: ID!
  name: String!
}

# io.flow.common.v0.models.merchant_of_record_entity_registration
type MerchantOfRecordEntityRegistration {
  number: String!
  country: String!
}

# io.flow.common.v0.models.price
type Price {
  amount: Float!
  currency: String!
  label: String!
}

# io.flow.common.v0.models.name
type Name {
  first: String
  last: String
}

# io.flow.common.v0.models.organization_reference
type OrganizationReference {
  id: ID!
}

# io.flow.common.v0.models.contact
type Contact {
  name: Name!
  company: String
  email: String
  phone: String
}

# io.flow.consumer.invoice.v0.models.consumer_invoice_levy
type ConsumerInvoiceLevy {
  rate: Decimal!
  value: Price!
}

# io.flow.consumer.invoice.v0.models.consumer_invoice_line_item
type ConsumerInvoiceLineItem {
  item: ItemReference!
  description: String!
  quantity: Long!
  unitPrice: Price!
  unitDiscount: Price
  unitTax: ConsumerInvoiceLevy
  unitDuty: ConsumerInvoiceLevy
}

# io.flow.consumer.invoice.v0.models.credit_memo
type CreditMemo {
  id: ID!
  number: String
  status: ConsumerInvoiceStatus!
  date: DateTimeIso8601!
  key: String!
  invoice: ConsumerInvoiceReference!
  entity: MerchantOfRecordEntity!
  payments: [ConsumerInvoicePayment!]!
  lines: [ConsumerInvoiceLine!]!
  documents: [ConsumerInvoiceDocument!]!
  attributes: Object!
  taxRegistration: TaxRegistration
}

# io.flow.consumer.invoice.v0.models.consumer_invoice
type ConsumerInvoice {
  id: ID!
  number: String!
  status: ConsumerInvoiceStatus!
  date: DateTimeIso8601!
  key: String!
  order: ConsumerInvoiceOrderSummary!
  entity: MerchantOfRecordEntity!
  payments: [ConsumerInvoicePayment!]!
  center: ConsumerInvoiceCenterReference
  destination: OrderAddress!
  billingAddress: BillingAddress
  lines: [ConsumerInvoiceLine!]!
  documents: [ConsumerInvoiceDocument!]!
  attributes: Object!
  taxRegistration: TaxRegistration
  customerType: ConsumerInvoiceCustomerType
  estimatedDeliveryDate: DateTimeIso8601
}

# io.flow.consumer.invoice.v0.models.consumer_invoice_order_summary
type ConsumerInvoiceOrderSummary {
  id: ID!
  number: String!
  submittedAt: DateTimeIso8601!
}

# io.flow.consumer.invoice.v0.models.consumer_invoice_line_shipping
type ConsumerInvoiceLineShipping {
  price: Price!
  discount: Price
  tax: ConsumerInvoiceLevy
  duty: ConsumerInvoiceLevy
}

# io.flow.consumer.invoice.v0.models.b2b_invoice
type B2bInvoice {
  id: ID!
  number: String!
  buyer: MerchantOfRecordEntity!
  seller: MerchantOfRecordEntity!
  status: ConsumerInvoiceStatus!
  date: DateTimeIso8601!
  key: String!
  order: ConsumerInvoiceOrderSummary!
  economicTitleLocation: EconomicTitleLocation!
  center: ConsumerInvoiceCenterReference
  destination: OrderAddress
  tax: Money!
  lines: [ConsumerInvoiceLine!]!
  documents: [ConsumerInvoiceDocument!]!
  attributes: Object!
  estimatedDeliveryDate: DateTimeIso8601
}

# io.flow.consumer.invoice.v0.models.b2b_invoice_reference
type B2bInvoiceReference {
  id: ID!
  key: String!
  number: String!
}

# io.flow.consumer.invoice.v0.models.b2b_credit_memo
type B2bCreditMemo {
  id: ID!
  number: String!
  buyer: MerchantOfRecordEntity!
  seller: MerchantOfRecordEntity!
  status: ConsumerInvoiceStatus!
  date: DateTimeIso8601!
  key: String!
  invoice: B2bInvoiceReference!
  lines: [ConsumerInvoiceLine!]!
  documents: [ConsumerInvoiceDocument!]!
  attributes: Object!
}

# io.flow.consumer.invoice.v0.models.consumer_invoice_reference
type ConsumerInvoiceReference {
  id: ID!
  key: String!
  number: String!
}

# io.flow.consumer.invoice.v0.models.consumer_invoice_document
type ConsumerInvoiceDocument {
  type: ConsumerInvoiceDocumentType!
  language: String!
  url: String!
}

# io.flow.consumer.invoice.v0.models.consumer_invoice_center_reference
type ConsumerInvoiceCenterReference {
  id: ID!
  key: String!
  name: String!
  address: Address!
}

# io.flow.consumer.invoice.v0.models.consumer_invoice_line_discount
type ConsumerInvoiceLineDiscount {
  price: Price!
}

# io.flow.consumer.invoice.v0.models.consumer_invoice_payment
type ConsumerInvoicePayment {
  date: DateTimeIso8601!
  description: String!
  value: Price!
  billingAddress: BillingAddress
}

# io.flow.experience.v0.models.order_address
type OrderAddress {
  text: String
  streets: [String!]
  city: String
  province: String
  postal: String
  country: String
  latitude: String
  longitude: String
  contact: Contact
}

# io.flow.experience.v0.models.order_summary_image
type OrderSummaryImage {
  url: String!
}

# io.flow.experience.v0.models.checkout_item_content_attribute
type CheckoutItemContentAttribute {
  key: String!
  name: String!
  value: String!
}

# io.flow.experience.v0.models.order_summary_levy
type OrderSummaryLevy {
  rate: Decimal!
  rateLabel: String
  value: Price!
}

# io.flow.experience.v0.models.order_summary_item
type OrderSummaryItem {
  number: String!
  name: String!
  description: String
  attributes: [CheckoutItemContentAttribute!]!
  image: OrderSummaryImage
  price: Price!
  discount: Price
  tax: OrderSummaryLevy
  duty: OrderSummaryLevy
  priceAttributes: Object!
}

# io.flow.experience.v0.models.order_summary_price_detail
type OrderSummaryPriceDetail {
  price: Price!
  name: String
  rate: Decimal
  rateLabel: String
}

# io.flow.experience.v0.models.order_summary_line_item
type OrderSummaryLineItem {
  item: OrderSummaryItem!
  quantity: Long!
  discount: Price
  tax: OrderSummaryLevy
  duty: OrderSummaryLevy
  total: Price!
  priceAttributes: Object!
}

# io.flow.experience.v0.models.order_summary
type OrderSummary {
  number: String!
  subtotal: OrderSummaryPriceDetail!
  shipping: OrderSummaryPriceDetail
  tax: OrderSummaryPriceDetail
  duty: OrderSummaryPriceDetail
  insurance: OrderSummaryPriceDetail
  discount: OrderSummaryPriceDetail
  surcharges: OrderSummaryPriceDetail
  adjustment: OrderSummaryPriceDetail
  total: OrderSummaryPriceDetail!
  lines: [OrderSummaryLineItem!]!
  identifiers: Object
}

# io.flow.harmonization.v0.models.tax_registration
type TaxRegistration {
  id: ID!
  key: String!
  number: String!
  timestamp: DateTimeIso8601!
  result: TaxVerificationResult!
  resultReason: String
  name: String
  address: String
  companyName: String
}

# io.flow.organization.v0.models.organization_form
type OrganizationForm {
  id: String
  name: String
  environment: Environment!
  parentId: String
  defaults: OrganizationDefaults
}

# io.flow.organization.v0.models.organization_put_form
type OrganizationPutForm {
  name: String
  environment: Environment
  parentId: String
  defaults: OrganizationDefaults
}

# io.flow.payment.v0.models.public_key
type PublicKey {
  id: ID!
}

# io.flow.checkout.backend.v0.models.checkout
type Checkout {
  id: ID!
  organization: OrganizationSummary!
  order: OrderSummary
  errors: [CheckoutError!]
}

# io.flow.checkout.backend.v0.models.checkout_line_form
type CheckoutLineForm {
  checkoutId: String!
  itemNumber: String!
  quantity: Long!
}

# io.flow.checkout.backend.v0.models.checkout_error
type CheckoutError {
  code: CheckoutErrorCode!
  messages: [String!]!
  redirect: CheckoutRedirect
}

# io.flow.checkout.common.v0.models.checkout_redirect
type CheckoutRedirect {
  method: CheckoutRedirectMethod!
  url: String!
  body: String
}

# io.flow.consumer.invoice.v0.unions.consumer_invoice_line
union ConsumerInvoiceLine = ConsumerInvoiceLineItem | ConsumerInvoiceLineDiscount | ConsumerInvoiceLineShipping

# io.flow.consumer.invoice.v0.enums.consumer_invoice_line_discriminator
enum ConsumerInvoiceLineDiscriminator {
  ITEM
  DISCOUNT
  SHIPPING
}

# added automatically from io.flow.common.v0.models.organization_defaults
input OrganizationDefaultsInput {
  country: String!
  baseCurrency: String!
  language: String!
  locale: String!
  timezone: String!
}

# added automatically from io.flow.common.v0.models.merchant_of_record_entity
input MerchantOfRecordEntityInput {
  organization: OrganizationReferenceInput!
  name: String!
  vat: MerchantOfRecordEntityRegistrationInput!
  streets: [String!]!
  city: String!
  province: String
  postal: String
  country: String!
  phone: String
  email: String
}

# added automatically from io.flow.common.v0.models.item_reference
input ItemReferenceInput {
  number: String!
}

# added automatically from io.flow.common.v0.models.money
input MoneyInput {
  amount: Float!
  currency: String!
}

# added automatically from io.flow.common.v0.models.billing_address
input BillingAddressInput {
  name: NameInput
  streets: [String!]
  city: String
  province: String
  postal: String
  country: String
  company: String
}

# added automatically from io.flow.common.v0.models.address
input AddressInput {
  text: String
  streets: [String!]
  streetNumber: String
  city: String
  province: String
  postal: String
  country: String
  latitude: String
  longitude: String
}

# added automatically from io.flow.common.v0.models.organization
input OrganizationInput {
  id: ID!
  name: String!
  environment: Environment!
  parent: OrganizationReferenceInput
  defaults: OrganizationDefaultsInput
  createdAt: DateTimeIso8601
}

# added automatically from io.flow.common.v0.models.organization_summary
input OrganizationSummaryInput {
  id: ID!
  name: String!
}

# added automatically from io.flow.common.v0.models.merchant_of_record_entity_registration
input MerchantOfRecordEntityRegistrationInput {
  number: String!
  country: String!
}

# added automatically from io.flow.common.v0.models.price
input PriceInput {
  amount: Float!
  currency: String!
  label: String!
}

# added automatically from io.flow.common.v0.models.name
input NameInput {
  first: String
  last: String
}

# added automatically from io.flow.common.v0.models.organization_reference
input OrganizationReferenceInput {
  id: ID!
}

# added automatically from io.flow.common.v0.models.contact
input ContactInput {
  name: NameInput!
  company: String
  email: String
  phone: String
}

# added automatically from io.flow.consumer.invoice.v0.models.consumer_invoice_levy
input ConsumerInvoiceLevyInput {
  rate: Decimal!
  value: PriceInput!
}

# added automatically from io.flow.consumer.invoice.v0.models.consumer_invoice_line_item
input ConsumerInvoiceLineItemInput {
  item: ItemReferenceInput!
  description: String!
  quantity: Long!
  unitPrice: PriceInput!
  unitDiscount: PriceInput
  unitTax: ConsumerInvoiceLevyInput
  unitDuty: ConsumerInvoiceLevyInput
}

# added automatically from io.flow.consumer.invoice.v0.models.credit_memo
input CreditMemoInput {
  id: ID!
  number: String
  status: ConsumerInvoiceStatus!
  date: DateTimeIso8601!
  key: String!
  invoice: ConsumerInvoiceReferenceInput!
  entity: MerchantOfRecordEntityInput!
  payments: [ConsumerInvoicePaymentInput!]!
  lines: [ConsumerInvoiceLineInput!]!
  documents: [ConsumerInvoiceDocumentInput!]!
  attributes: Object!
  taxRegistration: TaxRegistrationInput
}

# added automatically from io.flow.consumer.invoice.v0.models.consumer_invoice
input ConsumerInvoiceInput {
  id: ID!
  number: String!
  status: ConsumerInvoiceStatus!
  date: DateTimeIso8601!
  key: String!
  order: ConsumerInvoiceOrderSummaryInput!
  entity: MerchantOfRecordEntityInput!
  payments: [ConsumerInvoicePaymentInput!]!
  center: ConsumerInvoiceCenterReferenceInput
  destination: OrderAddressInput!
  billingAddress: BillingAddressInput
  lines: [ConsumerInvoiceLineInput!]!
  documents: [ConsumerInvoiceDocumentInput!]!
  attributes: Object!
  taxRegistration: TaxRegistrationInput
  customerType: ConsumerInvoiceCustomerType
  estimatedDeliveryDate: DateTimeIso8601
}

# added automatically from io.flow.consumer.invoice.v0.models.consumer_invoice_order_summary
input ConsumerInvoiceOrderSummaryInput {
  id: ID!
  number: String!
  submittedAt: DateTimeIso8601!
}

# added automatically from io.flow.consumer.invoice.v0.models.consumer_invoice_line_shipping
input ConsumerInvoiceLineShippingInput {
  price: PriceInput!
  discount: PriceInput
  tax: ConsumerInvoiceLevyInput
  duty: ConsumerInvoiceLevyInput
}

# added automatically from io.flow.consumer.invoice.v0.models.b2b_invoice
input B2bInvoiceInput {
  id: ID!
  number: String!
  buyer: MerchantOfRecordEntityInput!
  seller: MerchantOfRecordEntityInput!
  status: ConsumerInvoiceStatus!
  date: DateTimeIso8601!
  key: String!
  order: ConsumerInvoiceOrderSummaryInput!
  economicTitleLocation: EconomicTitleLocation!
  center: ConsumerInvoiceCenterReferenceInput
  destination: OrderAddressInput
  tax: MoneyInput!
  lines: [ConsumerInvoiceLineInput!]!
  documents: [ConsumerInvoiceDocumentInput!]!
  attributes: Object!
  estimatedDeliveryDate: DateTimeIso8601
}

# added automatically from io.flow.consumer.invoice.v0.models.b2b_invoice_reference
input B2bInvoiceReferenceInput {
  id: ID!
  key: String!
  number: String!
}

# added automatically from io.flow.consumer.invoice.v0.models.b2b_credit_memo
input B2bCreditMemoInput {
  id: ID!
  number: String!
  buyer: MerchantOfRecordEntityInput!
  seller: MerchantOfRecordEntityInput!
  status: ConsumerInvoiceStatus!
  date: DateTimeIso8601!
  key: String!
  invoice: B2bInvoiceReferenceInput!
  lines: [ConsumerInvoiceLineInput!]!
  documents: [ConsumerInvoiceDocumentInput!]!
  attributes: Object!
}

# added automatically from io.flow.consumer.invoice.v0.models.consumer_invoice_reference
input ConsumerInvoiceReferenceInput {
  id: ID!
  key: String!
  number: String!
}

# added automatically from io.flow.consumer.invoice.v0.models.consumer_invoice_document
input ConsumerInvoiceDocumentInput {
  type: ConsumerInvoiceDocumentType!
  language: String!
  url: String!
}

# added automatically from io.flow.consumer.invoice.v0.models.consumer_invoice_center_reference
input ConsumerInvoiceCenterReferenceInput {
  id: ID!
  key: String!
  name: String!
  address: AddressInput!
}

# added automatically from io.flow.consumer.invoice.v0.models.consumer_invoice_line_discount
input ConsumerInvoiceLineDiscountInput {
  price: PriceInput!
}

# added automatically from io.flow.consumer.invoice.v0.models.consumer_invoice_payment
input ConsumerInvoicePaymentInput {
  date: DateTimeIso8601!
  description: String!
  value: PriceInput!
  billingAddress: BillingAddressInput
}

# added automatically from io.flow.consumer.invoice.v0.models.consumer_invoice_line
input ConsumerInvoiceLineInput {
  discriminator: ConsumerInvoiceLineDiscriminator!
  item: ItemReferenceInput
  description: String
  quantity: Long
  unitPrice: PriceInput
  unitDiscount: PriceInput
  unitTax: ConsumerInvoiceLevyInput
  unitDuty: ConsumerInvoiceLevyInput
  price: PriceInput
  discount: PriceInput
  tax: ConsumerInvoiceLevyInput
  duty: ConsumerInvoiceLevyInput
}

# added automatically from io.flow.experience.v0.models.order_address
input OrderAddressInput {
  text: String
  streets: [String!]
  city: String
  province: String
  postal: String
  country: String
  latitude: String
  longitude: String
  contact: ContactInput
}

# added automatically from io.flow.experience.v0.models.order_summary_image
input OrderSummaryImageInput {
  url: String!
}

# added automatically from io.flow.experience.v0.models.checkout_item_content_attribute
input CheckoutItemContentAttributeInput {
  key: String!
  name: String!
  value: String!
}

# added automatically from io.flow.experience.v0.models.order_summary_levy
input OrderSummaryLevyInput {
  rate: Decimal!
  rateLabel: String
  value: PriceInput!
}

# added automatically from io.flow.experience.v0.models.order_summary_item
input OrderSummaryItemInput {
  number: String!
  name: String!
  description: String
  attributes: [CheckoutItemContentAttributeInput!]!
  image: OrderSummaryImageInput
  price: PriceInput!
  discount: PriceInput
  tax: OrderSummaryLevyInput
  duty: OrderSummaryLevyInput
  priceAttributes: Object!
}

# added automatically from io.flow.experience.v0.models.order_summary_price_detail
input OrderSummaryPriceDetailInput {
  price: PriceInput!
  name: String
  rate: Decimal
  rateLabel: String
}

# added automatically from io.flow.experience.v0.models.order_summary_line_item
input OrderSummaryLineItemInput {
  item: OrderSummaryItemInput!
  quantity: Long!
  discount: PriceInput
  tax: OrderSummaryLevyInput
  duty: OrderSummaryLevyInput
  total: PriceInput!
  priceAttributes: Object!
}

# added automatically from io.flow.experience.v0.models.order_summary
input OrderSummaryInput {
  number: String!
  subtotal: OrderSummaryPriceDetailInput!
  shipping: OrderSummaryPriceDetailInput
  tax: OrderSummaryPriceDetailInput
  duty: OrderSummaryPriceDetailInput
  insurance: OrderSummaryPriceDetailInput
  discount: OrderSummaryPriceDetailInput
  surcharges: OrderSummaryPriceDetailInput
  adjustment: OrderSummaryPriceDetailInput
  total: OrderSummaryPriceDetailInput!
  lines: [OrderSummaryLineItemInput!]!
  identifiers: Object
}

# added automatically from io.flow.harmonization.v0.models.tax_registration
input TaxRegistrationInput {
  id: ID!
  key: String!
  number: String!
  timestamp: DateTimeIso8601!
  result: TaxVerificationResult!
  resultReason: String
  name: String
  address: String
  companyName: String
}

# added automatically from io.flow.organization.v0.models.organization_form
input OrganizationFormInput {
  id: String
  name: String
  environment: Environment!
  parentId: String
  defaults: OrganizationDefaultsInput
}

# added automatically from io.flow.organization.v0.models.organization_put_form
input OrganizationPutFormInput {
  name: String
  environment: Environment
  parentId: String
  defaults: OrganizationDefaultsInput
}

# added automatically from io.flow.payment.v0.models.public_key
input PublicKeyInput {
  id: ID!
}

# added automatically from io.flow.checkout.backend.v0.models.checkout
input CheckoutInput {
  id: ID!
  organization: OrganizationSummaryInput!
  order: OrderSummaryInput
  errors: [CheckoutErrorInput!]
}

# added automatically from io.flow.checkout.backend.v0.models.checkout_line_form
input CheckoutLineFormInput {
  checkoutId: String!
  itemNumber: String!
  quantity: Long!
}

# added automatically from io.flow.checkout.backend.v0.models.checkout_error
input CheckoutErrorInput {
  code: CheckoutErrorCode!
  messages: [String!]!
  redirect: CheckoutRedirectInput
}

# added automatically from io.flow.checkout.common.v0.models.checkout_redirect
input CheckoutRedirectInput {
  method: CheckoutRedirectMethod!
  url: String!
  body: String
}